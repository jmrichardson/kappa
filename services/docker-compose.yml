---
version: '3.4'
services:
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:6.4.0"
    network_mode: "host"
    environment:
      - cluster.name=kappa
      - network.host=0.0.0.0
      - discovery.zen.ping.unicast.hosts=master
      - discovery.zen.minimum_master_nodes=1
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    extra_hosts:

      ### EDIT ###
      # IP address of ES master server 
      - "master:192.168.1.100"

    ports: 
      - '9200:9200'
      - '9300:9300'

  kibana:
    container_name: kibana
    hostname: kibana
    network_mode: "host"
    image: "docker.elastic.co/kibana/kibana:6.4.0"
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    # volumes:
      # - ./config/kibana/kibana.yml:/usr/share/kibana/kibana.yml
    ports: 
      - '5601:5601'
    depends_on:
      - elasticsearch

  filebeat:
    container_name: filebeat
    hostname: filebeat
    network_mode: "host"
    user: root
    image: "docker.elastic.co/beats/filebeat:6.4.0"
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./filebeat/fields.yml:/usr/share/filebeat/fields.yml
      # Temporarily get news logs
      - /home/kappa/packages/kappa_news/logs/:/var/log/kappa/
      - fbdata:/usr/share/filebeat/data/
    depends_on:
      - elasticsearch
    command: filebeat -e -strict.perms=false

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    network_mode: "host"
    image: "bitnami/rabbitmq"
    environment:
      - RABBITMQ_ERL_COOKIE=secret
      - RABBITMQ_CLUSTER_NODE_NAME=rabbitmq@rabbitmq

      ### EDIT ###
      # Master node name: rabbitmq
      # Slave node 1 name: rabbitmq1
      # Slave node 2 name: rabbitmq2
      - RABBITMQ_NODE_NAME=rabbitmq@rabbitmq

      ### EDIT ###
      # Master node type: stats
      # Slave node type: queue-disc
      - RABBITMQ_NODE_TYPE=stats

    extra_hosts:

      ### EDIT ###
      # RabbitMQ requires all nodes to be resolved
      - "rabbitmq:192.168.1.100"
      - "rabbitmq1:192.168.1.101"

    ports: 
      - '4369:4369'
      - '5672:5672'
      - '15672:15672'
      - '25672:25672'
      - '35672:35672'


  flower:
    container_name: flower
    hostname: flower
    image: "mher/flower:latest"
    environment:
      - CELERY_BROKER_URL=amqp://user:bitnami@localhost:5672//
    ports: 
      - '5555:5555'


  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

      ### EDIT ###
      # Increment ZOO_SERVER_ID by 1 for slave nodes
      # List all zookeeper servers in ZOO_SERVERS
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=server.1=0.0.0.0:2888:3888,server.2=192.168.1.101:2888:3888

    volumes:
      - zkdata:/bitnami/zookeeper

  kafka:
    container_name: kafka
    hostname: kafka
    image: bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT:localhost:2181
    volumes:
      - kkdata:/bitnami/kafka
    depends_on:
      - zookeeper


volumes:
  esdata:
    driver: local
  fbdata:
    driver: local
  kkdata:
    driver: local
  zkdata:
    driver: local

